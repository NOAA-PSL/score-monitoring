#!Jinja2

#===========================
# $$$ CYLC SUITE DOCUMENTATION BLOCK

# monitoring-stats :: cylc/suite.rc

# Email: jessica.knezha@noaa.gov

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.

# =========================================================================
[meta]
	title = "SFS reanalysis development: atmosphere-only scout runs"
	description = "Calculate statistics from the SFS reanalysis scout runs"

# parameters 
{% set MAIL_ADDRESS = 'Adam.Schneider@noaa.gov' %}
{% set INITIAL_CYCLE_POINT = '19790101T00' %}
{% set FINAL_CYCLE_POINT = '19790106T00' %}
{% set ENV_PATH = 'scoutrun_monitoring.env' %}

[task parameters]
    #stats = file_count
    stats = gsi_obsfit
    #daily_stats = daily_mean_surface_background

[scheduler]
    UTC mode = True
    cycle point format = %Y%m%dT%H
    [[events]]
        mail events = startup, shutdown
    [[mail]]
        to = {{ MAIL_ADDRESS }}
    
[scheduling]
    initial cycle point = {{ INITIAL_CYCLE_POINT }}
    final cycle point = {{ FINAL_CYCLE_POINT }}
    runahead limit = P0
    [[graph]]
        T00,T06,T12,T18 = """
            file_check => store_data
        """
        #+PT1D/P1D = """file_check[T00] & file_check[T06] & file_check[T12] &
        #            file_check[T18] & file_check[+P1D/T00] => store_data_daily"""
        
[runtime]
    [[root]]
        #retry delays = 2*PT5M # Try again right away, then wait 5 minutes
        #platform = batch_partition
        [[[events]]]
            mail events = submission failed, failed, retry
        [[[mail]]]
            to = {{ MAIL_ADDRESS }}

    [[file_check]]
        script = """
	    bucket_file_count.py $CYLC_TASK_CYCLE_POINT {{ ENV_PATH }}
        """
	[[[job]]]
		execution retry delays = 168*PT1M # if job fails, wait one minute and try again
    [[print_cycle_valid]]
            script = "echo 'files found in bucket'" # for $CYCLE_TASK_CYCLE_POINT'"
    [[store_data]]
        [[[job]]]
                execution retry delays = 168*PT1M # if job fails, wait one minute and try again
    [[store_data<stats>]]
        inherit=store_data
        script = """
             db_${CYLC_TASK_PARAM_stats}.py $CYLC_TASK_CYCLE_POINT {{ ENV_PATH }}
        """
    [[data_stored]]
        script = "echo 'all data stored'"
