#!Jinja2

#===========================
# $$$ CYLC SUITE DOCUMENTATION BLOCK

# monitoring-stats :: cylc/suite.rc

# Email: jessica.knezha@noaa.gov

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.

# =========================================================================
[meta]
	title = "monitoring statistics"
	description = "perform statistics monitoring for replay experiments"

# parameters 
{% set MAIL_ADDRESS = 'jessica.knezha@noaa.gov' %}
{% set INITIAL_CYCLE_POINT = '19980501T00' %}
{% set FINAL_CYCLE_POINT = '19980601T00' %}
#TODO: insert other necessary parameters

[cylc]
    UTC mode = True
    cycle point format = %Y%m%dT%H
    [[environment]]
        MAIL_ADDRESS = {{ MAIL_ADDRESS }}
    [[parameters]]
        stats = file_count
    
[scheduling]
    initial cycle point = {{ INITIAL_CYCLE_POINT }}
    final cycle point = {{ FINAL_CYCLE_POINT }}
    max active cycle points = 1

    [[dependencies]]
        [[[T06]]]
            graph = """
		        GET_DATA
            """

[runtime]
    [[root]]
        #retry delays = 2*PT5M # Try again right away, then wait 5 minutes
        init-script = """
            umask 022
            ulimit -c 0
            ulimit -s unlimited
            set -x
        """

        pre-script = """
        """

        post-script = """
        if [[ -d ${CYLC_TASK_WORK_DIR} ]]; then 
            rm -rf ${CYLC_TASK_WORK_DIR}
        fi 
        if [[ -d ${JOBDIR:+"$JOBDIR"} ]]; then 
            rm -rf ${JOBDIR}
        fi
        """ 

            [[[job]]]
                batch system = background
            
            [[[events]]]
                failed handler = cylc email-task
                submission failed handler = cylc email-task
    [[GET_DATA]]
        [[[job]]]
		execution retry delays = 168*PT2H # if job fails, wait two hours and try again
    [[get_data<stats>]]
        inherit=GET_DATA
        script = """
		 python $CYLC_SUITE_DEF_PATH/../scripts/bucket-file-count.py $CYLC_TASK_CYCLE_POINT
    	"""



    
